#### DJ action

function find_dicer() {
    amidi -l | awk '/Dicer/ {print $2}'
}

# function xwax() {
#     cd $HOME/xwax_playlists/playlists
#     PLAYLISTS=$(ls -1 | sed -e 's/\(.*\)/-l \0 /')
#     DICER=$(find_dicer)
#     XWAX=$HOME/code/xwax/xwax
#     $XWAX -g /1.4 --dicer $DICER -s /bin/cat -i $HOME/code/xwax/import \
#         -m 4 -a plughw:Audio4DJ,0,0 -a plughw:Audio4DJ,0,1 \
#         $PLAYLISTS
# }
alias xwax="$HOME/code/xwax/xwax -g /1.4 --dicer $(find_dicer) -s /bin/cat -i $HOME/code/xwax/import -m 4 -a plughw:Audio4DJ,0,0 -a plughw:Audio4DJ,0,1"

#### Git

gic () {
    LBUFFER="git commit -m \""
    RBUFFER="\""
}
zle -N gic gic
bindkey "git co" gic

gco () {
    LBUFFER="git checkout "
}
zle -N gco gco
bindkey "git ch" gco

git_push_up () {
    LBUFFER="git push --set-upstream origin $(git branch | grep \* | cut -d ' ' -f2)"
}
zle -N git_push_up git_push_up
bindkey "push up" git_push_up

gis () {
    LBUFFER="git status"
}
zle -N gis gis
bindkey "git s" gis

gap () {
    LBUFFER="git add -p"
}
zle -N gap gap
bindkey "git a" gap

with_usb () {
    if [[ $HOST == "leibniz" ]]; then
        DEVICE=/dev/sda1
    else
        DEVICE=/dev/sdb1
    fi
    LBUFFER="pmount $DEVICE && "
    RBUFFER=" && sleep 0.5 && pumount $DEVICE"
}
zle -N with_usb with_usb
bindkey "usb " with_usb

#### Python stuff

function check_build_py(){
    if ! [[ -f "$PWD/build.py" ]] ; then
        echo "No 'build.py' found in current directory"
        return 1
    fi
}

function mkvenv2(){
    if [ -n "${VIRTUAL_ENV}" ] ; then
        echo "You already have a virtualenv active: $VIRTUAL_ENV"
        return 1
    fi
    local venv_name
    venv_name=${1:-.venv2}
    if [ -e $venv_name ] ; then
        echo "$venv_name already exists, aborting."
        return 1
    fi
    echo "Will setup virtualenv in $venv_name"
    virtualenv $venv_name
    source $venv_name/bin/activate
    pip install -U pip
    if check_build_py ; then
        pip install -U --pre pybuilder
        pyb install_dependencies
    fi
}

function mkvenv3(){
    if [ -n "${VIRTUAL_ENV}" ] ; then
        echo "You already have a virtualenv active: $VIRTUAL_ENV"
        return 1
    fi
    local venv_name
    venv_name=${1:-.venv3}
    if [ -e $venv_name ] ; then
        echo "$venv_name already exists, aborting."
        return 1
    fi
    echo "Will setup virtualenv in $venv_name"
    python3 -m venv $venv_name
    source $venv_name/bin/activate
    pip install -U pip
    if check_build_py ; then
        pip install -U --pre pip pybuilder
        pyb install_dependencies
    fi
    if [ -e requirements.txt ] ; then
        pip install -r requirements.txt
    fi
}

alias venv2="source .venv2/bin/activate"
alias venv3="source .venv3/bin/activate"

setopt clobber
stty stop undef
stty start undef
export PATH=$PATH:$HOME/bin/
alias adb=$HOME/Android/Sdk/platform-tools/adb
export LESS='-g -i -M -R -S -w -z-4'
export VISUAL='vim'
export EDITOR='vim'
export VISUAL='vim'

gc () {
    LBUFFER="git commit -m \""
    RBUFFER="\""
}
zle -N gc gc
bindkey '^gc' gc

# Add node
export NVM_DIR="/home/ingo/.nvm"
function load_nvm (){
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
}


#### Configure prompt
# source .powerlevel9k.zsh
source .powerlevel10k.zsh

gks () {
    echo "Applying function: git key sync $1";
    if [[ $HOST == "wertheimer" ]]; then
        DEVICE=/dev/sda1
    else
        DEVICE=/dev/sdb1
    fi
    echo "Using device $DEVICE"
    pmount $DEVICE && git $1 && sleep .5 && pumount $DEVICE
}
