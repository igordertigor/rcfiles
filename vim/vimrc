syntax enable

call plug#begin()

" General appearance
Plug 'jacoborus/tender'  " color scheme
Plug 'ctrlpvim/ctrlp.vim'   " fuzzy search by ctrl-p
Plug 'wellle/targets.vim'    " very versatile text objects ai) etc
Plug 'itchyny/lightline.vim'   " light status bar
Plug 'tpope/vim-fugitive'   " vim support (mostly for status line)

" Linting
Plug 'vim-syntastic/syntastic'   " syntastic linting
Plug 'igordertigor/csvmodel-syntastic'  " syntastic checker for csvmodel

" Python
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins'}  " autocompletion
Plug 'davidhalter/jedi-vim'   " jedi refactoring for python
Plug 'zchee/deoplete-jedi'    " jedi autocompletion plugin for deoplete
Plug 'jeetsukumaran/vim-pythonsense'  " pyhton text objects
Plug 'vim-scripts/indentpython.vim'  " more pep8-like python indentation
Plug 'igordertigor/bnb.vim'   " black and blue code formatting

" Several other tools
Plug 'vim-scripts/a.vim'   " Alternate between .c and .h files :A ...
Plug 'lervag/vimtex'   " vimtex
Plug 'ElmCast/elm-vim'     " elm support
Plug 'alvan/vim-closetag'  " close html tags
Plug 'mileszs/ack.vim'   " ag silver server
Plug 'hashivim/vim-terraform'   " terraform mode

Plug 'jvirtanen/vim-hcl'   " hashicorp (packer, terraform, ...)

Plug 'leafgarland/typescript-vim'   " typescript

Plug 'cespare/vim-toml'

call plug#end()

" set background=light
" colorscheme flattened_light
" set background=dark
" colorscheme tender
set background=light
colorscheme flattened_light

" Using airline as statusline (also contains colors of status line)
" source $HOME/.vim/airline
source $HOME/.vim/lightline


source $HOME/.vim/bnb


set nocompatible                         " vim not vi (should technically be set automatically)
set encoding=utf-8
filetype plugin indent on

" Where to look for tags files:
" 1. .git/tags;$HOME  look for a file .git/tags in current folder and move up
"     until $HOME until you find it.
" 2.  tags;$HOME if you didn't find a .git/tags file, search in the same way
"     for just tags
set tags=.git/tags;$HOME,tags;$HOME

" Appearance
set number                                          " show line numbers
set listchars=tab:>-,trail:~,extends:>,precedes:<   " Chars to highlight whitespace
set list                                            " Use those chars

" Splits
set splitbelow            " New splits added below
set splitright            " New splits added right
" Simplify split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Syntastic syntax checking
source $HOME/.vim/syntastic

" Set up python3 to virtual env
let g:python3_host_prog = '~/.virtualenvs/sysvenv3/bin/python3'

" map f3 and f4 to cumulatively toggle spellchecking in english and german
source $HOME/.vim/valentin.vim
set spelllang=
map <f3> :call SetSpelllang("en_ca")<cr>
map <f4> :call SetSpelllang("de")<cr>

" fix stuff after bad paste
map <f7> <ESC>u: set paste<CR>.:set nopaste<CR>gi


source $HOME/.vim/ctrlp
source $HOME/.vim/ack


" Filetypes
"    Python
autocmd FileType python
    \   set expandtab
    \ | set tabstop=4
    \ | set shiftwidth=4
    \ | set fileformat=unix
    \ | set colorcolumn=80
"    \ | set autoindent


autocmd FileType bash
    \   set expandtab
    \ | set tabstop=4


"    Web tech
autocmd FileType html
    \   set tabstop=2
    \ | set softtabstop=2
    \ | set shiftwidth=2
    \ | set expandtab
    \ | source $HOME/.vim/vim-closetag
autocmd FileType javascript
    \   set tabstop=2
    \ | set softtabstop=2
    \ | set shiftwidth=2
    \ | set expandtab
autocmd FileType css
    \   set tabstop=2
    \ | set softtabstop=2
    \ | set shiftwidth=2
    \ | set expandtab

autocmd FileType scss
    \   set tabstop=2
    \ | set softtabstop=2
    \ | set shiftwidth=2
    \ | set expandtab

autocmd FileType yaml,yml
    \   set tabstop=2
    \ | set softtabstop=2
    \ | set shiftwidth=2
    \ | set expandtab
autocmd FileType json
    \   set expandtab
    \ | set tabstop=2
    \ | set shiftwidth=2

autocmd FileType elm
    \   set tabstop=4
    \ | set softtabstop=4
    \ | set shiftwidth=4
    \ | set expandtab

autocmd FileType typescript
    \   set expandtab
    \ | set shiftwidth=2

autocmd FileType make set noexpandtab
autocmd FileType C,cpp
    \   set noexpandtab
    \ | set tabstop=4


" Normal text
autocmd FileType rst set wrap linebreak nolist formatoptions+=l
autocmd FileType tex
            \ set wrap linebreak nolist formatoptions+=l |
            \ source $HOME/.vim/vimtex
let g:markdown_fenced_languages = ['html', 'python', 'bash=sh']
autocmd FileType md,mkd,markdown
    \   setlocal autoindent
    \ | setlocal colorcolumn=0
    \ | setlocal linebreak
    \ | setlocal shiftwidth=4
    \ | setlocal tabstop=4
    \ | setlocal spell
    \ | setlocal wrap
    \ | setlocal expandtab
    \ | setlocal textwidth=0

" DVC
autocmd! BufNewFile,BufRead Dvcfile,*.dvc,dvc.log setfiletype yaml
